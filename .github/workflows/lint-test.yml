name: "CI lint and test with Docker-Compose Solr"

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  SOLRCLOUD_USER: ${{ secrets.SOLRCLOUD_USER }}
  SOLRCLOUD_PASSWORD: ${{ secrets.SOLRCLOUD_PASSWORD }}
  SOLRCLOUD_HOST: solr

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build & start App + Solr
        run: |
          docker compose -f docker-compose.ci.yml up -d solr app
          echo "⏳ waiting for solr on localhost:8983…"
          until curl -sSf http://localhost:8983/solr > /dev/null; do sleep 1; done

      - name: Configure bundler in container
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            git config --global core.hardlinks false

      - name: Install Ruby gems
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            bundle install --jobs=4 --retry=3

      - name: Install Node modules
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            yarn install --frozen-lockfile

      - name: Add headless browser deps
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            make add-testing-deps

      - name: Copy vendor/bundle -> host cache
        run: |
          docker cp tul_cob-app-1:/app/vendor/bundle ./vendor/bundle

      - name: Copy node_modules -> host cache
        run: |
          docker cp tul_cob-app-1:/app/node_modules ./node_modules

      - name: Set up database
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            make ci-setup-db

      - name: Run linter
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            make lint

      - name: Run Ruby tests
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            bundle exec rails ci
          docker cp tul_cob-app-1:/app/coverage/lcov/app.lcov ./app.lcov

      - name: Run JavaScript tests
        run: |
          docker compose -f docker-compose.ci.yml exec app \
            make test-js

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./app.lcov

  update_airflow_variables:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Add SSH key for Airflow
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AIRFLOW_SSH_KEY }}

      - name: Update Airflow variables
        run: bash .circleci/update-airflow.sh
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}