name: "CI lint and test with Docker-Compose Solr"

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        ruby: [ "3.4" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop
      
  test:
    needs: lint
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        ruby: [ "3.4" ]

    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0         # ensure you get the full history, so submodule SHAs resolve
          submodules: recursive  # pull all submodules

      - name: Copy config files
        run: |
          cp config/secrets.yml.example config/secrets.yml
          cp config/alma.yml.example config/alma.yml
          cp config/bento.yml.example config/bento.yml

      - name: Start services
        run: docker compose -f docker-compose.ci.yml up -d solr app

      - name: Wait for Solr (timeout after 60s)
        run: |
          timeout 60s bash -c \
            'until curl -sSf http://localhost:8983/solr; do sleep 2; done'

      - name: List Solr cores
        run: |
          docker compose exec solr \
            curl -sSf 'http://localhost:8983/solr/admin/cores?action=STATUS&wt=json' \
            | jq .

      - name: Bundle Install
        run: docker compose exec app bash -lc "bundle install --jobs 4 --retry 3"

      - name: Run Solr ingest & tests
        run: docker compose exec app bundle exec rails ci
          
      - name: Run javascript tests
        run: make test-js
        
      - name: Report coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

        