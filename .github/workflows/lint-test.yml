name: "CI lint and test with Docker-Compose Solr"

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main ]
  workflow_dispatch: {}

env:
  CI: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        ruby: [ "3.4" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop
      
  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      SOLRCLOUD_USER:   "catalog"
      SOLRCLOUD_PASSWORD: "catalog"
      SOLRCLOUD_HOST: "solr"

    steps:
      - name: Checkout code (with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0         # ensure you get the full history, so submodule SHAs resolve
          submodules: recursive  # pull all submodules

      - name: Build & Start App + Solr
        run: |
          docker compose -f docker-compose.ci.yml up -d solr app
          # wait for solr
          until curl -sSf http://solr:8983/solr > /dev/null; do sleep 1; done

      - name: Run bundler on the app container
        run: make ci-bundle-install

      - name: Run yarn install on the app container
        run: make ci-yarn-install

      - name: Add headless browser testing dependencies
        run: make add-testing-deps

      - name: Copy the vendor/bundle from the container to local
        run: make ci-copy-bundle-files-to-local

      - name: Copy the node_modules from the container to local
        run: make ci-copy-node-modules-to-local

      - name: Set up DB
        run: make ci-setup-db

      - name: Copy config files
        run: |
          cp config/secrets.yml.example config/secrets.yml
          cp config/alma.yml.example config/alma.yml
          cp config/bento.yml.example config/bento.yml

      - name: Wait for Solr (host)
        run: |
          until curl -sSf http://localhost:8983/solr > /dev/null; do
            echo "Waiting for Solrâ€¦"
            sleep 1
          done
          
      - name: Run Rails CI suite
        run: |
          docker compose -f docker-compose.ci.yml exec app bundle exec rails ci

      - name: Run JS tests
        run: |
          docker compose -f docker-compose.ci.yml exec app npm test

      # - name: Copy coverage
      #   run: |
      #     docker cp tul_cob-app-1:/app/coverage/lcov/app.lcov ./app.lcov
        
      - name: Report coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov/tul_cob.lcov

        