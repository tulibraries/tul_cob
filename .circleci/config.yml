version: 2

workflows:
  version: 2
  run_tests:
    jobs:
      - run_tests
  qa_deploy:
   jobs:
     - qa_deploy:
         filters:
           branches:
             only:
               - master
  stage_deploy:
    jobs:
      - stage_deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
  prod_deploy:
    jobs:
      - request-prod-deploy:
          type: approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
      - prod_deploy:
          requires:
            - request-prod-deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/

jobs:
  run_tests:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout

      - restore_cache:
          keys:
            - gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v4-{{ arch }}-{{ .Branch }}
            - gem-cache-v4-{{ arch }}
            - yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}

      
      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Build app
          command: make ci-up

      - run:
          name: Copy local bundler files to app container
          command: make ci-copy-bundle-files

      - run:
          name: Copy local node_modules to app container
          command: make ci-copy-node-modules

      - run:
          name: Run bundler on the app container
          command: make ci-bundle-install

      - run:
          name: Run yarn install on the app container
          command: make ci-yarn-install

      - run:
          name: Copy the vendor/bundle frome the container to local
          command: make ci-copy-bundle-files-to-local
      
      - run:
          name: Copy the node_modules from the container to local
          command: make ci-copy-node-modules-to-local
      
      - save_cache:
          key: gem-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
              - vendor/bundle
      - save_cache:    
          key: yarn-cache-v4-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
              - node_modules

      - run:
          name: Run linter
          command: make ci-lint
      - run:
          name: Run ruby tests
          command: make ci-test
      - run:
          name: Run javascript tests
          command: make ci-test-js

  qa_deploy:
    docker:
      - image: circleci/python:3.6.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
            - "59:d3:45:4c:e5:31:4e:cd:64:c0:e3:2a:73:a3:55:94"
      - run:
          command: bash .circleci/deploy-qa.sh

  stage_deploy:
    docker:
      - image: circleci/python:3.6.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
            - "59:d3:45:4c:e5:31:4e:cd:64:c0:e3:2a:73:a3:55:94"
      - run:
          command: bash .circleci/deploy-stage.sh

  prod_deploy:
    docker:
      - image: circleci/python:3.6.6
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "2f:37:66:17:11:ae:f9:0f:9e:52:98:41:fe:d0:0c:78"
            - "59:d3:45:4c:e5:31:4e:cd:64:c0:e3:2a:73:a3:55:94"
      - run:
          command: bash .circleci/deploy-prod.sh

      - run:
          name: Set Production Airflow Variable "CATALOG_PRODUCTION_SOLR_COLLECTION" to match value in .env
          command: bash .circleci/update-airflow.sh
